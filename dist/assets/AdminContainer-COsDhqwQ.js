import{u as y,r as m,d as _,o as k,aW as o,c as B,E as l,a as N,q as p,p as A,M as S,j as c,l as d,w as f,v as D,B as M,s as R,aX as U,aY as V,i as v,n as w,aZ as T,S as z,F as L}from"./index-CBwtJ5i4.js";import{_ as O}from"./_plugin-vue_export-helper-CfPbstfH.js";const F={class:"admin-container"},P={key:0,class:"loading-container"},j={key:1,class:"error-container"},q={class:"error-message"},W={__name:"AdminContainer",setup(X){const s=y(),t=m(!0),i=m(!1),r=m(""),g=m(null),$=_(()=>{const n="/admin-static";return console.log(`📍 [AdminContainer] 子应用地址: ${n}`),console.log("🌍 [AdminContainer] 当前环境: production"),n}),u=_(()=>{const n={userInfo:s.userinfo,token:s.token,theme:"light",language:"zh-CN",timestamp:Date.now()};return console.log("📦 [AdminContainer] 传递给子应用的数据:",n),n}),C=async()=>{try{if(console.log("🎯 [AdminContainer] 开始启动React子应用..."),!g.value)throw new Error("子应用容器元素不存在");await V(g.value,u.value),t.value=!1,i.value=!1,console.log("✅ [AdminContainer] React子应用启动成功"),setTimeout(()=>{o.$emit("user-info-updated",u.value),console.log("📤 [AdminContainer] 已向子应用发送用户信息")},500)}catch(n){console.error("❌ [AdminContainer] 子应用启动失败:",n),h(n)}},h=n=>{t.value=!1,i.value=!0;const e=(n==null?void 0:n.message)||(n==null?void 0:n.toString())||"未知错误";r.value=e,console.error("❌ [AdminContainer] 管理后台加载失败:",n),e.includes("Failed to fetch")?r.value="网络连接失败，请检查网络状态或稍后重试":e.includes("404")?r.value="管理后台服务未启动，请联系管理员":r.value=`加载失败: ${e}`,l.error("管理后台加载失败，请刷新重试")},E=async()=>{console.log("🔄 [AdminContainer] 用户手动重新加载子应用"),i.value=!1,t.value=!0,await C()},x=()=>{!t.value&&!i.value&&(console.log("🔄 [AdminContainer] 用户信息发生变化，同步到子应用"),o.$emit("user-info-updated",u.value))};return k(()=>{var n;console.log("🚀 [AdminContainer] 组件已挂载，开始初始化..."),console.log("🌍 [AdminContainer] 环境信息:"),console.log("  - NODE_ENV:","production"),console.log("  - import.meta.env.DEV:",!1),console.log("  - import.meta.env.PROD:",!0),console.log("  - 计算出的子应用URL:",$.value),console.log("📦 [AdminContainer] 传递给子应用的props:",u.value),((n=s.userinfo)==null?void 0:n.role)!=="ROLE_ADMIN"&&console.warn("⚠️ [AdminContainer] 当前用户不是管理员，可能无法正常使用管理后台"),s.$subscribe(x),setTimeout(async()=>{await C()},100),o.$on("admin-logout",()=>{console.log("📨 [AdminContainer] 收到子应用退出登录请求"),B.confirm("您确定要退出登录吗？","确认退出",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(()=>{s.logout(),l.success("已退出登录"),window.location.href="/login"}).catch(()=>{console.log("用户取消退出登录")})}),o.$on("admin-navigate",e=>{console.log("📨 [AdminContainer] 收到子应用导航请求:",e)}),o.$on("admin-user-updated",e=>{console.log("📨 [AdminContainer] 收到子应用用户信息更新:",e),s.updateUserInfo(e)}),o.$on("admin-message",({type:e,message:a})=>{console.log("📨 [AdminContainer] 收到子应用消息:",{type:e,message:a}),e==="success"?l.success(a):e==="error"?l.error(a):e==="warning"?l.warning(a):l.info(a)})}),N(()=>{console.log("🗑️ [AdminContainer] 组件即将卸载，清理事件监听..."),o.$off("admin-logout"),o.$off("admin-navigate"),o.$off("admin-user-updated"),o.$off("admin-message")}),(n,e)=>{const a=D,b=R;return v(),p("div",F,[t.value?(v(),p("div",P,[c(a,{class:"loading-icon",size:40},{default:f(()=>[c(w(T))]),_:1}),e[0]||(e[0]=d("p",{class:"loading-text"},"正在加载管理后台...",-1)),e[1]||(e[1]=d("p",{class:"loading-tip"},"首次加载可能需要几秒钟，请耐心等待",-1))])):A("",!0),i.value?(v(),p("div",j,[c(a,{class:"error-icon",size:40},{default:f(()=>[c(w(z))]),_:1}),e[3]||(e[3]=d("p",{class:"error-text"},"管理后台加载失败",-1)),d("p",q,M(r.value),1),c(b,{type:"primary",onClick:E},{default:f(()=>e[2]||(e[2]=[L("重新加载")])),_:1})])):A("",!0),S(d("div",{ref_key:"subAppContainer",ref:g,id:"react-admin-container",class:"sub-app-container"},null,512),[[U,!t.value&&!i.value]])])}}},G=O(W,[["__scopeId","data-v-8a3cdbc3"]]);export{G as default};
